Are epsilon-rules allowed in context-sensitive languages?,
Are epsilon-rules needed in the 3rd and 2nd levels of the hierarchy?,
How are context-sensitive languages described? What are the constraints?,
How are decision problems solved for the different levels?,
How can context-free languages be described? ,
How can we describe regular languages?,
How can you then decide the problem with a Chomsky Normal Form?,
How do you transform a CFG into a Chomsky normal form?,
What are recursively enumerable languages?,
What are the levels of the Chomsky hierarchy? ,
What is meant by “simple CFG”?,
What is the Chomsky Normal Form? ,
What’s the Chomsky Hierarchy? ,
Why is the Chomsky Normal Form different?,
 What are the decidable problems for regular languages? ,
How are objects encoded?,
How can you prove that R is uncountable?,
How can you show that Q and N have the same size? ,
How do you demonstrate the decidable problems for CFL?,
How do you demonstrate the decidable problems for RL?,
What are the decidable problems for CFL?,
What is a corollary that follows from R being uncountable?,
What is a correspondence? ,
What is a universal Turing machine?,
What is an algorithm?,
What is the characteristic sequence of a language A?,
What is the church-turing thesis?,
What is the diagonalization method used for?,
What is the emptiness testing problem?,
What is the equivalence problem?,
What kind of description of TMs do you know? Which is the one mostly used?,
What problem turing-unrecognizable do you know?,
What undecidable problem do you know?,
What’s the acceptance problem?,
What’s the Hilbert problem?,
When are two sets of the same size? ,
When is the set A said to be countable?,
Why is the 10th Hilbert problem unsolvable?,
Are deterministic and nondeterministic pushdown automata equivalent?,
Are you forced to use systematic methods of derivation?,
How are CFG defined? ,
How are CFGs and PDAs related?,
How are context-free languages and regular languages related?,
How could you understand whether a language is non-regular?,
How do you prove nonregularity?,
How do you represent the end of the stack?,
How is a derivation step represented?,
How is a PDA defined?,
How is a PDA graphically represented? ,
How is the transition function of a PDA defined?,
What are context-free grammars?,
What are some common methods of derivation? ,
What are the operations that can be done on a stack?,
"What are the steps to understand whether a machine has to differentiate between two words x, y? ",
What does the Myhill-Nerode theorem allow to find? ,
What is a context-free language?,
What is a production?,
What is a sentential form? ,
What is an inherently ambiguous language?,
What is nonregularity? ,
What is the derivation of a word?,
What is the derivation step?,
What is the stack?,
What should be done with the stack symbol?,
What ways do you know to eliminate ambiguity?,
What’s a configuration of a PDA?,
What’s a convention for the representation of a configuration of the PDA?,
What’s an example of nonregular language?,
What’s the difference between an NFM and a PDA?,
"What’s the Myhill-Nerode theorem? 
",
What’s the start configuration?,
When is a CFG ambiguous?,
When is a computation accepting?,
When is a word w derivable? ,
Where is the nondeterminism in PDA?,
Why are context-free grammars called context-free?,
Why are pushdown automata needed? ,
Are NFM more powerful than DFM?,
How are NFM tabullary represented?,
How can an NFM be viewed?,
How is a nondeterministic finite state machine defined?,
What are epsilon-transitions?,
What are state classes?,
What can a FM be seen as mathematically?,
What can state classes be used for?,
What is a computation in an NFM?,
What is a computation step in an NFM? ?,
What is a power set?,
What is modular design?,
What is subset construction?,
What is the difference between determinism and nondeterminism?,
What properties hold for state classes?,
When is a word accepted?,
When is modular design useful?,
How are natural numbers defined? ,
How can you represent a language?,
How is the notation for the Kleene’s closure?,
What are some properties of a language?,
What are the properties of the Kleene’s closure?,
What can be infinite and what not in the definition of languages?,
What do languages allow to do?,
What is a common alphabet? What is a word in that case?,
What is a language?,
"What is a word? 
",
What is an alphabet? ,
What is the concatenation between x and y?,
What is the convention for words? ,
What is the empty word?,
What is the length of a word?,
What is the power of a word?,
What is the set of all words of length k?,
What operations on words do you know?,
What relationships between words do you know?,
What’s the Cartesian product?,
What’s the convention for alphabets?,
What’s the Kleene’s closure? ,
What’s the set of words of length 0?,
Why is the study of languages of interest? ,
Can RE describe languages that FM cannot accept?,
Do you always need the parentheses? ,
How is concatenation extended to languages? ,
How is equivalence proven?,
How is the Kleene’s closure extended to languages? ,
How is the semantics of an re defined?,
How is the sintax of regular expressions defined? ,
What is a closure? ,
What is a regular language?,
"What is the definition of the syntax of re? 
",
What is the precedence between operators?,
What is the semantics of re?,
What operations are closed on regularity?,
What’s an important property of the Kleene’s closure on languages?,
Where can regular expressions be applied? ,
Why are parentheses used in re? ,
Are there other definitions of the turing machine?,
How can you approach the element distinctiveness problem?,
How can you demonstrate that a multi-tape TM is equivalent to a single-tape TM?,
How can you demonstrate that a nondet. TM is equivalent to a det. TM?,
How is a deterministic turing machine defined?  ,
How is a language classified based on TMs?,
How is the transition function defined for the TM? ,
Is the TM transition function special?,
What does turing complete mean? ,
What is a computation in a TM?,
What is a configuration in a TM?,
What is an enumerator? ,
What is the history behind turing machines? ,
What variants of TM do you know? ,
When is a NTM a decider?,